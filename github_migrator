#!/bin/bash
# Script to create backup of github private/public repositories under organization and download as archives
# Requires curl command, github access token generated as Owner.
# Add organization, access token and username to below fields before proceeding.
# Run ./github_migrator --help for instructions.
# Do not run --backup more than once to avoid multiple instances of backup on server side.
# v0.2

set -e
ORGANIZATION=""
GITHUB_ACCESS_TOKEN=""
GITHUB_USERNAME=""

backup_status() 
{
	rm migration-status
	for url in `curl -s -H "Authorization: token $GITHUB_ACCESS_TOKEN" -H "Accept: application/vnd.github.v3+json" https://api.github.com/orgs/bashworks/migrations | grep 'migrations' | grep -v archive_url | awk '{print $2}' | cut -d'"' -f2`; do
	echo $(curl -s -H "Authorization: token $GITHUB_ACCESS_TOKEN" -H "Accept: application/vnd.github.wyandotte-preview+json" $url | grep 'state\|full_name\|archive_url'| grep -v archive_format | awk '{print $2}' | cut -d'"' -f2) >> migration-status
	done
	cat migration-status
}

if [ "$1" = "--backup" ] || [ "$1" = "backup" ]; then
			echo "Initiating backup for all repositories in $ORGANIZATION, you can run github_migrator --status to check backup status. Please do not run --backup more than once to avoid duplicates."
			for repo in `curl -s -H "Authorization: token $GITHUB_ACCESS_TOKEN" -H "Accept: application/vnd.github.v3+json" https://api.github.com/orgs/$ORGANIZATION/repos | grep '"full_name"' | awk '{print $2}' | cut -d'/' -f2 | cut -d'"' -f1`; do 
				curl -s -H "Authorization: token $GITHUB_ACCESS_TOKEN" -X POST -H "Accept: application/vnd.github.wyandotte-preview+json" -d'{"lock_repositories":false,"repositories":["'$ORGANIZATION'/'$repo'"]}' https://api.github.com/orgs/$ORGANIZATION/migrations
			done
	elif [ "$1" = "--download" ] || [ "$1" = "download" ]; then
	 		backup_status > /dev/null
			for url in `grep exported ./migration-status | awk '{print $3}'`; do
					for name in `grep $url ./migration-status | awk '{print $2}' | cut -d'/' -f2`; do 
						if [ ! -f ./migration_archive_$name.tar.gz ]; then
						echo "Downloading $name .."
						curl -s -H "Accept: application/vnd.github.wyandotte-preview+json" -u $GITHUB_USERNAME:$GITHUB_ACCESS_TOKEN -L -o ./migration_archive_$name.tar.gz $url
						else [ -f ./migration_archive_$name.tar.gz ]; echo "$name already downloaded. Nothing to do." 
						fi 
					done
			done
	elif [ "$1" = "--status" ] || [ "$1" = "status" ]; then backup_status	
	else [ "$1" = "--help" ] || [ "$1" = "help" ]; 
	echo "Instructions:"
	echo "Requires curl command."
	echo "Edit this script and add Organization, Access Token (as owner) and Username. And run"
	echo "github_migrator {backup, download,status}"
	echo "For eg. github_migrator --status"
	echo "Do not run --backup more than once - to avoid duplicates."
fi
